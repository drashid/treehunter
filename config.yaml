parser:
  # regex to parse a main log line 
  # if a line doesn't match this, it will be rolled up into the previous line body (such as a multi-line stack trace or message body)
  line-regex: ^([0-9]{1,2}\s+[A-Za-z]+\s+[0-9]{4}\s+[0-9.:,]+)\s+\[([A-Z]+)\]\s+.*?((?:amazon|com|org|net|java)[a-zA-Z.0-9]+):\s*(.*)$
 
  # Used to extract exception class names like java.lang.RuntimeException, against the message of the log statement block
  exception-regex: (?:(?:[^\t]((?:amazon|com|org|net|java)[a-zA-Z.]+):\s+.*\n\t+at)|(?:Caused by:\s+((?:amazon|com|org|net|java)[a-zA-Z.]+)))
  
  # capture group fields/indexes
  fields:
    datetime: 
      index: 0
      format: dd MMM yyyy HH:mm:ss,SSS
    type: 
      index: 1
    source: 
      index: 2
    message: 
      index: 3
  
  # cron schedule for job that looks for new logs to parse
  cron-schedule: 0 * * * * ?
  
  # root log directory
  log-dir: "resources/logs"
      
db: 
  type: mongo
  mongo:
    host: 127.0.0.1
    port: 27017    
    
    db: treehunter 
    log-collection: logs
    files-collection: files
    
    # Warning: You may have to manually drop old TTL index to change this value
    expire-in-days: 365